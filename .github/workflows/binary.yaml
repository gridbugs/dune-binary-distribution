name: Binaries

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *' # Triggers the build at 1:00 UTC time

jobs:
  binary:
    name: Create
    permissions:
      id-token: write
      attestations: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            name: x86_64-apple-darwin
            installable: .#dune-experimental
          - os: macos-14
            name: aarch64-apple-darwin
            installable: .#dune-experimental
          - os: ubuntu-22.04
            name: x86_64-unknown-linux-musl
            installable: .#dune-static-experimental

    runs-on: ${{ matrix.os }}
    outputs:
      git-commit: ${{ steps.git-commit.outputs.hash }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: ocaml/dune
          ref: main # At some point we might need to change it to point to a developer preview branch
          fetch-depth: 0 # for git describe

      - uses: cachix/install-nix-action@v22

      - name: Extract build informations
        id: git-commit
        run: echo "hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Export version
        run: |
          echo "(version \"Dune Developer Preview: build $(date --iso-8601=seconds), git revision $(git rev-parse HEAD)\")" >> dune-project

      - run: nix build ${{ matrix.installable }}

      - name: Generate artifact attestation
        id: certificate
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "result/bin/dune"
          show-summary: false

      - name: Extract artifact and attestation
        run: |
          mkdir -p ~/${{ matrix.name }}/
          cp ${{ steps.certificate.outputs.bundle-path }} result/bin/dune ~/${{ matrix.name }}/
          tar -czvf ~/${{ matrix.name }}.tar.gz -C ~ ${{ matrix.name }}

      - uses: actions/upload-artifact@v4
        with:
          path: ~/${{ matrix.name }}.tar.gz
          name: ${{ matrix.name }}



  check-artifacts:
    strategy:
        fail-fast: false
        matrix:
          include:
            - os: macos-13
              name: x86_64-apple-darwin
            - os: macos-14
              name: aarch64-apple-darwin
            - os: ubuntu-22.04
              name: x86_64-unknown-linux-musl

    runs-on: ${{ matrix.os }}
    needs: binary
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4

      - name: Get dune accessible
        run: |
          tar -xvf ${{ matrix.name }}.tar.gz
          mv ./${{ matrix.name }}/dune ./dune

      - name: Check dune is working
        run: |
            export PATH="$PWD:$PATH"
            cd test
            dune pkg lock
            dune build


