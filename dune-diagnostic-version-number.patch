From 182900605526124fd564b0ad5c23eaf2a9ae4230 Mon Sep 17 00:00:00 2001
From: Stephen Sherratt <stephen@sherra.tt>
Date: Thu, 29 Aug 2024 15:54:18 +1000
Subject: [PATCH] Add diagnostic info to dev preview versions

Signed-off-by: Stephen Sherratt <stephen@sherra.tt>
---
 flake.nix | 40 +++++++++++++++++++++++++++++++---------
 1 file changed, 31 insertions(+), 9 deletions(-)

diff --git a/flake.nix b/flake.nix
index d5b154b78..166cbbd85 100644
--- a/flake.nix
+++ b/flake.nix
@@ -47,19 +47,33 @@
           });
         })
       ];
-      dune-static-overlay = configureFlags: self: super: {
+
+      # Add some information about the developer preview to the version number.
+      developer-preview-set-version-command = { configureFlags, extraText ? "" }: ''
+        test -f git.txt || echo "none" > git.txt   # nix can't see the git repo so it relies on a file git.txt containing the revision to be added to the project
+        cat >> dune-project << EOF
+        (version "dune developer preview, built $(date --iso-8601=seconds). Git info: $(cat git.txt). Feature flags: ${ nixpkgs.lib.strings.concatStringsSep " " configureFlags }.${ extraText }")
+        EOF
+      '';
+
+      dune-static-overlay = { configureFlags ? [], developerPreview ? false }: self: super: {
         ocamlPackages = super.ocaml-ng.ocamlPackages_4_14.overrideScope (oself: osuper: {
           dune_3 = osuper.dune_3.overrideAttrs (a: {
             src = ./.;
-            preBuild = "ocaml boot/bootstrap.ml --static";
+            preBuild = ''
+              ${ if developerPreview
+                 then developer-preview-set-version-command { configureFlags = configureFlags; extraText = " Statically linked."; }
+                 else "" }
+              ocaml boot/bootstrap.ml --static
+            '';
             configureFlags = configureFlags;
           });
         });
       };
 
-      pkgs-static = configureFlags: nixpkgs.legacyPackages.${system}.appendOverlays [
+      pkgs-static = args: nixpkgs.legacyPackages.${system}.appendOverlays [
         ocaml-overlays.overlays.default
-        (dune-static-overlay configureFlags)
+        (dune-static-overlay args)
       ];
 
       experimental-configure-flags = [
@@ -91,7 +105,7 @@
       formatter = pkgs.nixpkgs-fmt;
 
       packages = {
-        withConfigureFlags = with pkgs; configureFlags: stdenv.mkDerivation {
+        f = with pkgs; { configureFlags ? [], developerPreview ? false }: stdenv.mkDerivation {
           pname = "dune";
           version = "n/a";
           src = ./.;
@@ -106,12 +120,20 @@
           configurePlatforms = [ ];
           installFlags = [ "PREFIX=${placeholder "out"}" "LIBDIR=$(OCAMLFIND_DESTDIR)" ];
           configureFlags = configureFlags;
+          preBuild = if developerPreview then developer-preview-set-version-command { configureFlags = configureFlags; } else "";
+
         };
-        default = self.packages.${system}.withConfigureFlags [];
+        default = self.packages.${system}.f {};
         dune = self.packages.${system}.default;
-        dune-static = (pkgs-static []).pkgsCross.musl64.ocamlPackages.dune;
-        dune-experimental = self.packages.${system}.withConfigureFlags experimental-configure-flags;
-        dune-static-experimental = (pkgs-static experimental-configure-flags).pkgsCross.musl64.ocamlPackages.dune;
+        dune-static = (pkgs-static {}).pkgsCross.musl64.ocamlPackages.dune;
+        dune-experimental = self.packages.${system}.f {
+          configureFlags = experimental-configure-flags;
+          developerPreview = true;
+        };
+        dune-static-experimental = (pkgs-static {
+          configureFlags = experimental-configure-flags;
+          developerPreview = true;
+        }).pkgsCross.musl64.ocamlPackages.dune;
       };
 
       devShells =
-- 
2.44.1

